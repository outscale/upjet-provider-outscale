/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ListenerObservation struct {
}

type ListenerParameters struct {

	// +kubebuilder:validation:Required
	LoadBalancerName *string `json:"loadBalancerName" tf:"load_balancer_name,omitempty"`

	// +kubebuilder:validation:Required
	LoadBalancerPort *float64 `json:"loadBalancerPort" tf:"load_balancer_port,omitempty"`
}

type ListenerRuleObservation struct {
	ListenerID *float64 `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	ListenerRuleID *float64 `json:"listenerRuleId,omitempty" tf:"listener_rule_id,omitempty"`
}

type ListenerRuleParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	HostNamePattern *string `json:"hostNamePattern,omitempty" tf:"host_name_pattern,omitempty"`

	// +kubebuilder:validation:Required
	ListenerRuleName *string `json:"listenerRuleName" tf:"listener_rule_name,omitempty"`

	// +kubebuilder:validation:Optional
	PathPattern *string `json:"pathPattern,omitempty" tf:"path_pattern,omitempty"`

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`
}

type LoadBalancerListernerRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Required
	ListenerRule []ListenerRuleObservation `json:"listenerRule,omitempty" tf:"listener_rule,omitempty"`

	RequestID *string `json:"requestId,omitempty" tf:"request_id,omitempty"`
}

type LoadBalancerListernerRuleParameters struct {

	// +kubebuilder:validation:Required
	Listener []ListenerParameters `json:"listener" tf:"listener,omitempty"`

	// +kubebuilder:validation:Required
	ListenerRule []ListenerRuleParameters `json:"listenerRule" tf:"listener_rule,omitempty"`

	// +kubebuilder:validation:Required
	VMIds []*string `json:"vmIds" tf:"vm_ids,omitempty"`
}

// LoadBalancerListernerRuleSpec defines the desired state of LoadBalancerListernerRule
type LoadBalancerListernerRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LoadBalancerListernerRuleParameters `json:"forProvider"`
}

// LoadBalancerListernerRuleStatus defines the observed state of LoadBalancerListernerRule.
type LoadBalancerListernerRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LoadBalancerListernerRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LoadBalancerListernerRule is the Schema for the LoadBalancerListernerRules API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,upjet-provider-outscale}
type LoadBalancerListernerRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LoadBalancerListernerRuleSpec   `json:"spec"`
	Status            LoadBalancerListernerRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LoadBalancerListernerRuleList contains a list of LoadBalancerListernerRules
type LoadBalancerListernerRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoadBalancerListernerRule `json:"items"`
}

// Repository type metadata.
var (
	LoadBalancerListernerRule_Kind             = "LoadBalancerListernerRule"
	LoadBalancerListernerRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LoadBalancerListernerRule_Kind}.String()
	LoadBalancerListernerRule_KindAPIVersion   = LoadBalancerListernerRule_Kind + "." + CRDGroupVersion.String()
	LoadBalancerListernerRule_GroupVersionKind = CRDGroupVersion.WithKind(LoadBalancerListernerRule_Kind)
)

func init() {
	SchemeBuilder.Register(&LoadBalancerListernerRule{}, &LoadBalancerListernerRuleList{})
}
